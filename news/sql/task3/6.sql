--Custom LOGGING db table. The following corresponding columns created:
--a. Record insert date;
--b. Referenced Table Name - Table Name where new record was inserted;
--c. Description - The list of key-value pairs, separated by semicolon. 

DROP TABLE LOGGING;
CREATE TABLE LOGGING 
(
  INSERT_DATE TIMESTAMP DEFAULT SYSTIMESTAMP  NOT NULL 
, TABLE_NAME NVARCHAR2(20) NOT NULL 
, DESCRIPTION CLOB NOT NULL 
);

CREATE OR REPLACE TRIGGER "AUTHORS_TRIGGER" BEFORE
  INSERT ON AUTHORS FOR EACH ROW DECLARE DESCRIPTION CLOB;
  BEGIN
    IF :NEW.ID    IS NOT NULL THEN
      DESCRIPTION := DESCRIPTION || 'ID: ' || :NEW.ID || '; ';
    END IF;
    IF :NEW.NAME  IS NOT NULL THEN
      DESCRIPTION := DESCRIPTION || 'NAME: ' || :NEW.NAME;
    END IF;
    INSERT
    INTO LOGGING
      (
        TABLE_NAME,
        DESCRIPTION
      )
      VALUES
      (
        'AUTHOR',
        DESCRIPTION
      );
  END;

CREATE OR REPLACE TRIGGER "COMMENTS_TRIGGER" BEFORE
  INSERT ON COMMENTS FOR EACH ROW DECLARE DESCRIPTION VARCHAR2(500);
  BEGIN
    IF :NEW.ID    IS NOT NULL THEN
      DESCRIPTION := DESCRIPTION || 'ID: ' || :NEW.ID || '; ';
    END IF;
    IF :NEW.TEXT  IS NOT NULL THEN
      DESCRIPTION := DESCRIPTION || 'TEXT: ' || :NEW.TEXT || '; ';
    END IF;
    IF :NEW.CREATION_DATE IS NOT NULL THEN
      DESCRIPTION         := DESCRIPTION || 'CREATION_DATE: ' || :NEW.CREATION_DATE || '; ';
    END IF;
    IF :NEW.ID_NEWS IS NOT NULL THEN
      DESCRIPTION   := DESCRIPTION || 'ID_NEWS: ' || :NEW.ID_NEWS;
    END IF;
    INSERT
    INTO LOGGING
      (
        TABLE_NAME,
        DESCRIPTION
      )
      VALUES
      (
        'COMMENTS',
        DESCRIPTION
      );
  END;

CREATE OR REPLACE TRIGGER "NEWS_TRIGGER" AFTER
  INSERT ON NEWS FOR EACH ROW DECLARE DESCRIPTION CLOB;
  BEGIN
    IF :NEW.ID    IS NOT NULL THEN
      DESCRIPTION := DESCRIPTION || 'ID: ' || :NEW.ID || '; ';
    END IF;
    IF :NEW.TITLE IS NOT NULL THEN
      DESCRIPTION := DESCRIPTION || 'TITLE: ' || :NEW.TITLE || '; ';
    END IF;
    IF :NEW.DESCRIPTION IS NOT NULL THEN
      DESCRIPTION       := DESCRIPTION || 'DESCRIPTION: ' || :NEW.DESCRIPTION || '; ';
    END IF;
    IF :NEW.FULL_TEXT IS NOT NULL THEN
      DESCRIPTION     := DESCRIPTION || 'FULL_TEXT: ' || :NEW.FULL_TEXT || '; ';
    END IF;
    IF :NEW.CREATION_DATE IS NOT NULL THEN
      DESCRIPTION         := DESCRIPTION || 'CREATION_DATE: ' || :NEW.CREATION_DATE || '; ';
    END IF;
    IF :NEW.MODIFICATION_DATE IS NOT NULL THEN
      DESCRIPTION             := DESCRIPTION || 'MODIFICATION_DATE: ' || :NEW.MODIFICATION_DATE || '; ';
    END IF;
    INSERT INTO LOGGING
      (TABLE_NAME, DESCRIPTION
      ) VALUES
      ('NEWS', DESCRIPTION
      );
  END;

CREATE OR REPLACE TRIGGER "TAG_TRIGGER"
  AFTER INSERT 
  ON TAG
  FOR EACH ROW
DECLARE
  DESCRIPTION CLOB;
BEGIN
  IF :NEW.NAME IS NOT NULL THEN
    DESCRIPTION := DESCRIPTION || 'TAG: ' || :NEW.NAME || '; ';
  END IF;
  INSERT INTO LOGGING(TABLE_NAME, DESCRIPTION) VALUES('TAG', DESCRIPTION);
END;

CREATE OR REPLACE TRIGGER "NEWS_AUTHORS_TRIGGER" AFTER
  INSERT ON NEWS_AUTHORS FOR EACH ROW DECLARE DESCRIPTION CLOB;
  BEGIN
    IF :NEW.NEWS_ID IS NOT NULL THEN
      DESCRIPTION   := DESCRIPTION || 'NEWS_ID: ' || :NEW.NEWS_ID || '; ';
    END IF;
    IF :NEW.AUTHOR_ID IS NOT NULL THEN
      DESCRIPTION     := DESCRIPTION || 'AUTHOR_ID: ' || :NEW.AUTHOR_ID || '; ';
    END IF;
    INSERT
    INTO LOGGING
      (
        TABLE_NAME,
        DESCRIPTION
      )
      VALUES
      (
        'NEWS_AUTHORS',
        DESCRIPTION
      );
  END;

CREATE OR REPLACE TRIGGER "NEWS_TAG_TRIGGER" AFTER
  INSERT ON NEWS_TAG FOR EACH ROW DECLARE DESCRIPTION CLOB;
  BEGIN
    IF :NEW.NEWS_ID IS NOT NULL THEN
      DESCRIPTION   := DESCRIPTION || 'NEWS_ID: ' || :NEW.NEWS_ID || '; ';
    END IF;
    IF :NEW.TAG   IS NOT NULL THEN
      DESCRIPTION := DESCRIPTION || 'TAG: ' || :NEW.TAG || '; ';
    END IF;
    INSERT INTO LOGGING
      (TABLE_NAME, DESCRIPTION
      ) VALUES
      ('NEWS_TAG', DESCRIPTION
      );
  END;